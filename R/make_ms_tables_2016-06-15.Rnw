\documentclass[11pt]{article}
\usepackage{graphicx, verbatim}
\usepackage{caption}
\usepackage{hyperref}
\usepackage{url}
\setlength{\textwidth}{6.5in} 
\setlength{\textheight}{9in}
\setlength{\oddsidemargin}{0in} 
\setlength{\evensidemargin}{0in}
\setlength{\topmargin}{-1.5cm}

<<load_lib,include=FALSE,results="hide">>=
library(data.table)
library(doMC)
library(xlsx)
library(R.utils)
source("get_file_paths.R")
@

<<set_file_path,echo=FALSE>>=
this_analysis_path = file.path(PROJ_RESULTS_PATH,"make_ms_tables_2016-06-15")
prefix.string = file.path(this_analysis_path,"graphics","make_ms_tables_2016-06-15-")
rdata_prefix = file.path(this_analysis_path,'make_ms_tables_2016-06-15-')
step_list = ""
@

\begin{document}
<<setup, include=FALSE, cache=FALSE>>=
# set global chunk options
opts_chunk$set(cache = FALSE) # enable cache to make it faster
opts_chunk$set(fig.path=prefix.string, fig.align='center', fig.show='hold',
               eval=TRUE,echo=TRUE,include=TRUE,
               cache.path="cache/make_ms_tables_2016-06-15-")

knit_hooks$set(checkpoint = function(before, options, envir) {
  # e.g. we skip all chunks after the chunk example-b
  if (!before && options$label == options$checkpoint) {
    opts_chunk$set(cache = FALSE, eval = FALSE, echo = FALSE, include = FALSE)
    # you can do other things like dumping `envir` into globalenv(), e.g.
    # assign('ChunkEnv', envir, envir = globalenv())
  }
})
## set checkpoint=NULL to disable checkpoints
opts_chunk$set(checkpoint = 'sessionInfo') # restore objects up to exmple-b
## now if you knit() this document, only x exists; y is not loaded
@

\title{Data tables for 1001 Epigenomes manuscript}
\date{June 15, 2016}

\maketitle

\section{Settings}

\begin{itemize}
\item This analysis was run on \Sexpr{System$getHostname()}.
\end{itemize}

<<setup_parallel>>=
registerDoMC(32)
getDoParWorkers()
@


\section{Supplemental table for differentially expressed genes and co-expression models

<<supp_table_deg_mod>>=
allgroups2_deg = read.table(file.path(PROJ_RESULTS_PATH,'acc_variable_genes_2016-04-21/acc_variable_genes_2016-04-21-topTable_allgroups2_k4_fdr5.tsv'),sep='\t',header=TRUE,stringsAsFactors=FALSE)
colnames(allgroups2_deg) = sub('logFC.cmp','logFC.',colnames(allgroups2_deg))
rvnr_deg = read.table(file.path(PROJ_RESULTS_PATH,'acc_variable_genes_2016-04-21/acc_variable_genes_2016-04-21-topTable_rvnr_k4_fdr5.tsv'),sep='\t',header=TRUE,stringsAsFactors=FALSE)

deg_xlsx_file = paste0(rdata_prefix,'DEG_FDR5_and_WGCNA.xlsx')
deg_wb = createWorkbook()
deg_wb_a = createSheet(wb=deg_wb,sheetName="TableS3A")
deg_wb_b = createSheet(wb=deg_wb,sheetName="TableS3B")
addDataFrame(x=allgroups2_deg,sheet=deg_wb_a)
addDataFrame(x=rvnr_deg,sheet=deg_wb_b)

rel_mod = read.table(file.path(PROJ_RESULTS_PATH,'wgcna_analysis_2016-04-23/wgcna_analysis_2016-04-23-gene_color_rel.tsv'),sep='\t',header=TRUE,quote="",stringsAsFactors=FALSE)
rel_mod = rel_mod[,c('gene_id','mod_color','mod')]
nonrel_mod = read.table(file.path(PROJ_RESULTS_PATH,'wgcna_analysis_2016-04-23/wgcna_analysis_2016-04-23-gene_color_nonrel.tsv'),sep='\t',header=TRUE,quote="",stringsAsFactors=FALSE)
nonrel_mod = nonrel_mod[,c('gene_id','mod_color','mod')]

mod_wb_a = createSheet(wb=deg_wb,sheetName="TableS3C")
mod_wb_b = createSheet(wb=deg_wb,sheetName="TableS3D")
addDataFrame(x=rel_mod,sheet=mod_wb_a,row.names=FALSE)
addDataFrame(x=nonrel_mod,sheet=mod_wb_b,row.names=FALSE)
saveWorkbook(deg_wb,deg_xlsx_file)
rm(deg_wb)
@ 

\section{Supplemental table for eQTLepi}

<<supp_table_eqtl>>=
eqtl_info = data.frame(allele=c("eQTL","eQTL_mCG","eQTL_mCH","eQTL_mC"),
                       lmm_master_dir=c(file.path(eqtl_19_path,'results/lmm_master'),
                                        file.path(eqtl_22_path,'dmCG_filtered_chr1-5/results/lmm_master/'),
                                                  file.path(eqtl_22_path,'dmCH_filtered_chr1-5/results/lmm_master'),
                                                  file.path(eqtl_22_path,'dmC_filtered_chr1-5/results/lmm_master')))
rownames(eqtl_info) = eqtl_info[,'allele']

eqtl_bed_list = alply(eqtl_info,1,function(eqtl) {
    df = read.table(file.path(eqtl[1,'lmm_master_dir'],'chr1-5genesbonf_5e-2.bed'),sep='\t')
    colnames(df) = c('chromosome',"start","end","gene","pvalue")
    df[,'allele'] = eqtl[1,'allele']
    df
},.dims=TRUE)

eqtl_xlsx_file =  paste0(rdata_prefix,'eQTL_eQTLepi.xlsx')
eqtl_wb = createWorkbook()
table_name = 'TableS4'

#ws_list = alply(seq_along(eqtl_bed_list),1,function(i) {
#    createSheet(wb=eqtl_wb,sheetName=paste0(table_name,toupper(letters[i])))
#})

for (i in seq_along(eqtl_bed_list)) {
    ws = createSheet(wb=eqtl_wb,sheetName=paste0(table_name,toupper(letters[i])))
    addDataFrame(x=eqtl_bed_list[[i]],sheet=ws,row.names=FALSE)
}

saveWorkbook(eqtl_wb,eqtl_xlsx_file)

rm(eqtl_wb)

@ 

<<sessionInfo>>=
sessionInfo()
@

\end{document}
