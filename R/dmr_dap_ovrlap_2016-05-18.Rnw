\documentclass[11pt]{article}
\usepackage{graphicx, verbatim}
\usepackage{caption}
\usepackage{hyperref}
\usepackage{url}
\setlength{\textwidth}{6.5in} 
\setlength{\textheight}{9in}
\setlength{\oddsidemargin}{0in} 
\setlength{\evensidemargin}{0in}
\setlength{\topmargin}{-1.5cm}

<<load_lib,include=FALSE,results="hide">>=
library(data.table)
library(doMC)
library(fields)
library(gdata)
library(ggplot2)
library(plyr)
library(NMF)
library(R.utils)
library(RColorBrewer)
library(reshape2)
library(stringr)
library(Vennerable)
source("get_file_paths.R")
@

<<set_file_path,echo=FALSE>>=
this_analysis_path = file.path(PROJ_RESULTS_PATH,"dmr_dap_orlap_2016-05-18")
prefix.string = file.path(this_analysis_path,"graphics","dmr_dap_orlap_2016-05-18-")
step_list = ""
@

\begin{document}
<<setup, include=FALSE, cache=FALSE>>=
# set global chunk options
opts_chunk$set(cache = FALSE) # enable cache to make it faster
opts_chunk$set(fig.path=prefix.string, fig.align='center', fig.show='hold',
               eval=TRUE,echo=TRUE,include=TRUE,
               cache.path="cache/dmr_dap_orlap_2016-05-18-")

knit_hooks$set(checkpoint = function(before, options, envir) {
  # e.g. we skip all chunks after the chunk example-b
  if (!before && options$label == options$checkpoint) {
    opts_chunk$set(cache = FALSE, eval = FALSE, echo = FALSE, include = FALSE)
    # you can do other things like dumping `envir` into globalenv(), e.g.
    # assign('ChunkEnv', envir, envir = globalenv())
  }
})
## set checkpoint=NULL to disable checkpoints
opts_chunk$set(checkpoint = 'sessionInfo') # restore objects up to exmple-b
## now if you knit() this document, only x exists; y is not loaded
@

\title{DMR overlap with DAP sites}
\date{May 18, 2016}

\maketitle

\section{Settings}

\begin{itemize}
\item This analysis was run on \Sexpr{System$getHostname()}.
\item This script makes the dmC\_bins and DAP-seq binding site overlap figures for dmC\_bins after the trimming error was fixed in May 2016.
\item dmc\_bins overlap with DAP sites association testing in \verb|\Sexpr{dmc_bins_gat02_path}|.
\item Other datasets overlap with DAP sites association testing in \verb|\Sexpr{dmc_bins_gat01_path}|.
\end{itemize}

<<setup_parallel>>=
registerDoMC(32)
getDoParWorkers()
@

<<read_gat,eval=TRUE>>=
dap_pf4_summary = fread(dap_pf4_summary_file)

feat_names = c("dappeak1","dapfimo1")
gat_list = alply(feat_names,1,function(feat) {
  feat_list = rbindlist(alply(dmc_bins_filtered,1,function(b) {
    gat_file = file.path(dmc_bins_gat02_path,b,paste0(b,'.gat_',feat,'.out'))
    print(gat_file)
    dt = fread(gat_file)
    cbind(data.table(dmC_bins=b,feat=feat),dt)
  },.parallel=T))
})
names(gat_list) = feat_names

dmc_feat_names = c('dapfimo4')#dapfimo2
dmc_gat_list = alply(dmc_feat_names,1,function(feat) {
    feat_list = rbindlist(alply(dmc_bins_filtered,1,function(b) {
        gat_file = file.path(dmc_bins_gat02_path,b,paste0(b,'.gat_',feat,'.out'))
        print(gat_file)
        dt = fread(gat_file)
        cbind(data.table(dmC_bins=b,feat=feat),dt)
  },.parallel=T))
})
names(dmc_gat_list) = dmc_feat_names

## dms_feat_names = c('dapfimo2','dapfimo4')
## dms_gat_list = alply(dms_feat_names,1,function(feat) {
##     feat_list = rbindlist(alply(dms_tables,1,function(b) {
##         gat_file = file.path(dms_gat01_path,b,paste0(b,'.gat_',feat,'.out'))
##         dt = fread(gat_file)
##         cbind(data.table(dms_table=b,feat=feat),dt)
##   },.parallel=T))
## })
## names(dms_gat_list) = dms_feat_names

# SNP features were not affected by the new dmC_bins, so use the old snp_gat01_path
snp_feat_names = c('dapfimo2','dapfimo4')
snp_gat_list = alply(snp_feat_names,1,function(feat) {
    feat_list = rbindlist(alply("snp",1,function(b) {
        gat_file = file.path(snp_gat01_path,b,paste0(b,'.gat_',feat,'.out'))
        dt = fread(gat_file)
        cbind(data.table(snp_table=b,feat=feat),dt)
  },.parallel=T))
})
names(snp_gat_list) = snp_feat_names

rev_spectral_ramp<-function(n) {
    return(colorRampPalette(rev(brewer.pal(11,'Spectral')))(n))
}
@


<<gat_dap1,fig.cap="Log2 fold enrichment of dmC bins with family DAP peaks or motifs in peaks.  Pattern is consistent between peaks and motifs in peaks, but the effect is stronger in motifs.  Note relatively little enrichment when all binding sites are pooled together (\"master\").",fig.width=2.4,fig.height=5>>=
dap_l2f_plot = rbindlist(gat_list[c('dappeak1','dapfimo1')])

max_l2f_dap = max(abs(dap_l2f_plot[,l2fold])+0.01)
l2f_values_dap = seq(-max_l2f_dap, max_l2f_dap, length = 51)

p1a = ggplot(dap_l2f_plot,aes(x=feat,y=annotation))
p1b = p1a + geom_tile(aes(fill=l2fold)) + facet_wrap(~dmC_bins)
p1c = p1b + scale_fill_gradientn("log2\nfold",
    colours=rev_spectral_ramp(50),limits=c(-max_l2f_dap,max_l2f_dap),
    na.value="grey75") + 
    scale_x_discrete("",breaks=c("dapfimo1","dappeak1"),
                    labels=c("Motifs in peaks","Peaks")) + 
    scale_y_discrete("TF family") +                      
    theme_bw() +
    theme(legend.position="bottom",
          axis.text.x=element_text(size=5,angle=45,hjust=1),
          axis.text.y=element_text(size=5),
          axis.title.x=element_text(size=6),
          axis.title.y=element_text(size=6),
          strip.text.x=element_text(size=5),
          legend.title=element_text(size=5),
          legend.text=element_text(size=5,hjust=0.5)) +
    guides(fill=guide_colorbar(barwidth=3,barheight=0.5))

#pdf(paste0(prefix.string,'gat_dap1.pdf'),width=2.4,height=5)
print(p1c)
#dev.off()
@ 

<<gat_dap_hm1,fig.width=1.6,fig.height=2.8,fig.caption="Heatmap showing only log2 enrichment with motif matches in peaks",eval=TRUE>>=
dap_l2f_wide0 = reshape(dap_l2f_plot[feat=='dapfimo1' & annotation!='master' & 
                                     annotation!='Homeobox_ecoli',
                                     list(dmC_bins,annotation,l2fold)],
                        idvar="annotation",timevar="dmC_bins",v.names="l2fold",
                        direction="wide")
dap_l2f_wide1 = as.matrix(dap_l2f_wide0[,-"annotation",with=FALSE])
rownames(dap_l2f_wide1) = gsub("(_tnt)|(_ecoli)","",dap_l2f_wide0[,annotation])
colnames(dap_l2f_wide1) = gsub("(l2fold.)|(_filtered)","",colnames(dap_l2f_wide1))

#pdf(paste0(prefix.string,'gat_dap_hm1.pdf'),width=1.6,height=2.8)
aheatmap(dap_l2f_wide1,breaks=0,col=rev_spectral_ramp(50),
         treeheight=10,
         Colv=NA)
#dev.off()
@

<<gat_dap2_hm,fig.width=6,fig.height=6,eval=TRUE>>=
exp_gat_dt0 = rbindlist(c(dmc_gat_list,snp_gat_list))
exp_gat_dt0 = exp_gat_dt0[,dmC_feat:=paste0(dmC_bins,'.',feat)]

exp_gat_wide0 = reshape(exp_gat_dt0[,list(dmC_feat,annotation,l2fold)],
                        idvar=c("annotation"),timevar=c("dmC_feat"),
                        direction="wide")

exp_gat_wide0 = exp_gat_wide0[,c("log2fc.dap.MR_mC","log2fc.dap.UR_mCG","icsum.cg"):=dap_pf4_summary[match(exp_gat_wide0[,annotation],name.meme),list(log2fc.dap.MR_mC,log2fc.dap.UR_mCG,icsum.cg)]]

sig_factors = unique(exp_gat_dt0[qvalue<=0.01,annotation])

exp_gat_wide = exp_gat_wide0[annotation %in% sig_factors,]

#pdf(paste0(prefix.string,'aa1.pdf'),width=6,height=8)
aheatmap(exp_gat_wide[,-c("annotation"),with=FALSE],breaks=0)
#dev.off()
@ 

<<mc_cor_hm,fig.width=3.6,fig.height=4,eval=TRUE>>=
mc_cor = cor(exp_gat_wide[,-"annotation",with=FALSE],use="pairwise.complete.obs")

#pdf(paste0(prefix.string,'aa2.pdf'),width=3.6,height=4)
aheatmap(mc_cor,col="Reds",treeheight=10)
#dev.off()
@ 

<<gat_dapfc_scatter,fig.width=1.4,fig.height=1.4,eval=TRUE>>=
p2a = ggplot(data=exp_gat_wide0)
p2b = p2a + geom_point(aes(x=l2fold.dmCH_filtered.dapfimo4,y=log2fc.dap.MR_mC),alpha=0.5,size=0.2)
p2c = p2b + scale_x_continuous(expression(paste("log2 TFBS FE in eQTL" ^"CH-DMB"))) +
    scale_y_continuous("log2 fold binding inhibition by mCH") +
    theme_bw() +
    theme(axis.text.x=element_text(size=5),
          axis.title.x=element_text(size=6),
          axis.text.y=element_text(size=5),
          axis.title.y=element_text(size=6))
    
#pdf(paste0(prefix.string,'aa3_mch.pdf'),width=1.4,height=1.4)
print(p2c)
#dev.off()

#pdf(paste0(prefix.string,'aa3_mc.pdf'),width=1.4,height=1.4)
p2c + geom_point(aes(x=l2fold.dmC_filtered.dapfimo4,y=log2fc.dap.MR_mC),alpha=0.5,size=0.2) +
    scale_x_continuous("log2 TFBS FE in eQTL")
#dev.off()

#pdf(paste0(prefix.string,'aa3_snp.pdf'),width=1.4,height=1.4)
p2c + geom_point(aes(x=l2fold.snp.dapfimo4,y=log2fc.dap.MR_mC),alpha=0.5,size=0.2) +
    scale_x_continuous("log2 TFBS FE in eQTL")
#dev.off()
@ 

<<gat_dapfc_scatter2,fig.width=2.4,fig.height=2.4,eval=TRUE>>=
scatter2_plot = rbindlist(list(
    exp_gat_wide0[l2fold.dmCG_filtered.dapfimo4>-6,list(x=log2fc.dap.MR_mC,y=l2fold.dmCG_filtered.dapfimo4,allele='eQTL CG-DMB')],
    exp_gat_wide0[l2fold.dmCH_filtered.dapfimo4>-6,list(x=log2fc.dap.MR_mC,y=l2fold.dmCH_filtered.dapfimo4,allele='eQTL CH-DMB')],
    exp_gat_wide0[l2fold.dmC_filtered.dapfimo4>-6,list(x=log2fc.dap.MR_mC,y=l2fold.dmC_filtered.dapfimo4,allele='eQTL C-DMB')],
    exp_gat_wide0[,list(x=log2fc.dap.MR_mC,y=l2fold.snp.dapfimo4,allele='eQTL')]))

scatter2_plot[,allele:=factor(allele,levels=c("eQTL CG-DMB","eQTL C-DMB","eQTL CH-DMB","eQTL"))]

mc_cor_plot = data.table('allele'=c("eQTL CG-DMB","eQTL CH-DMB","eQTL C-DMB","eQTL"),
                         x=c(3,3),y=c(-6,-6,-6,-3),
                         pcor=mc_cor['log2fc.dap.MR_mC',c('l2fold.dmCG_filtered.dapfimo4','l2fold.dmCH_filtered.dapfimo4','l2fold.dmC_filtered.dapfimo4','l2fold.snp.dapfimo4')])
mc_cor_plot[,allele:=factor(allele,levels=c("eQTL CG-DMB","eQTL CH-DMB","eQTL C-DMB","eQTL"))]

p3a = ggplot(data=scatter2_plot,aes(x=x,y=y)) 
p3b = p3a + geom_point(alpha=0.4,size=0.1) + 
    geom_text(data=mc_cor_plot,aes(x=x,y=y,label=sprintf('r=%.3f',pcor)),size=2,hjust=0.9,vjust=0.1) +
    facet_wrap(~allele,scales="free_y",ncol=2) 
p3c = p3b + scale_x_continuous(expression(paste("log2 fold binding inhibition by mC-all"))) +
    scale_y_continuous("log2 fold TFBS enrichment") +
    theme_bw() +
    theme(axis.text.x=element_text(size=5),
          axis.title.x=element_text(size=6),
          axis.text.y=element_text(size=5),
          axis.title.y=element_text(size=6),
          strip.text.x=element_text(size=6))

#pdf(paste0(prefix.string,'aa4.pdf'),width=2.4,height=2.4)
print(p3c)
#dev.off()
@ 

<<exp_gat_hm2,fig.width=1.8,fig.height=2.4,eval=TRUE>>=
exp_gat_hm2_plot = exp_gat_wide[!is.na(log2fc.dap.MR_mC) & log2fc.dap.MR_mC <=-1 & l2fold.dmCH_filtered.dapfimo4 >= log2(1.5),]
exp_gat_hm2_mat = as.matrix(exp_gat_hm2_plot[,list("Binding inhibition"=log2fc.dap.MR_mC,
                                                   "eQTLepi enrichment"=l2fold.dmCH_filtered.dapfimo4,
                                                   "eQTL enrichment"=l2fold.snp.dapfimo4)])

sample_names = str_split_fixed(exp_gat_hm2_plot[,annotation],"\\.",2)[,2]
protein_names = str_split_fixed(sample_names,"_",4)[,1]
rownames(exp_gat_hm2_mat) = protein_names
                                
#pdf(paste0(prefix.string,'aa5.pdf'),width=1.8,height=2.4)                   
aheatmap(exp_gat_hm2_mat,Colv=NA,col=rev_spectral_ramp(50),breaks=0,cexCol=0.6,treeheight=15)
#dev.off()
@ 

<<exp_gat_hm3,fig.width=1.8,fig.height=3,eval=TRUE>>=
exp_gat_hm3_rank = exp_gat_wide[,list(dmCH_filtered.rank=rank(-l2fold.dmCH_filtered.dapfimo4),snp.rank=rank(-l2fold.snp.dapfimo4))]
exp_gat_hm3_plot = exp_gat_wide[exp_gat_hm3_rank[,(dmCH_filtered.rank<=10 | snp.rank<=10) & !(is.na(log2fc.dap.MR_mC))],]
                                
exp_gat_hm3_mat = as.matrix(exp_gat_hm3_plot[,list("Enrichment in eQTL"=l2fold.snp.dapfimo4,
                                                   "Enrichment in eQTL CH-DMB"=l2fold.dmCH_filtered.dapfimo4,
                                                   "Binding inhibition"=log2fc.dap.MR_mC)])
                                                   
sample_names = str_split_fixed(exp_gat_hm3_plot[,annotation],"\\.",2)[,2]
protein_names = str_split_fixed(sample_names,"_",4)[,1]
rownames(exp_gat_hm3_mat) = protein_names
                                
#pdf(paste0(prefix.string,'aa6.pdf'),width=1.8,height=3)
aheatmap(exp_gat_hm3_mat,Colv=NA,col=rev_spectral_ramp(50),breaks=0,cexCol=0.6,
         treeheight=10,na.color="grey50",Rowv=hclust(dist(exp_gat_hm3_mat[,1:2])))
#dev.off()
@ 

<<exp_gat_gVsEpi,fig.width=2.2,fig.height=1.2,eval=TRUE>>=
exp_gat_gVsEpi = exp_gat_wide[!is.na(log2fc.dap.MR_mC),]
max_l2f_dap = max(abs(exp_gat_gVsEpi[,log2fc.dap.MR_mC])+0.01)

dapfimo_quantiles = rbindlist(alply(c("l2fold.snp.dapfimo4","l2fold.dmCH_filtered.dapfimo4"),
                          1,function(i) {
                              data.table(l2fold=i,
                                         quantile(exp_gat_gVsEpi[,i,with=FALSE][[1]],
                                                  probs=c(0.05,0.95))
                                         )
                          }))

p4a = ggplot(data=exp_gat_gVsEpi,aes(x=l2fold.snp.dapfimo4,
                                     y=l2fold.dmCH_filtered.dapfimo4,
                                     color=log2fc.dap.MR_mC))
p4b = p4a + geom_point(size=0.1,alpha=0.7) +
    geom_hline(yintercept=dapfimo_quantiles[l2fold=='l2fold.dmCH_filtered.dapfimo4',V2],
               linetype='solid',size=0.25) +
    geom_vline(xintercept=dapfimo_quantiles[l2fold=='l2fold.snp.dapfimo4',V2],
               linetype='longdash',size=0.25) 
p4c = p4b + scale_x_continuous("log2 FE in eQTL") +
    scale_y_continuous(expression(paste("log2 FE in eQTL"^"CH-DMB"))) +
    scale_color_gradientn("log2 binding\ninhibition",
                         colours=rev_spectral_ramp(50),limits=c(-max_l2f_dap,max_l2f_dap),
                         na.value="grey75") +
    theme_bw() + 
    theme(axis.text.x=element_text(size=5),
          axis.text.y=element_text(size=5),
          axis.title.x=element_text(size=6),
          axis.title.y=element_text(size=6),
          strip.text.x=element_text(size=5),
          legend.title=element_text(size=6),
          legend.text=element_text(size=5)) +
    guides(color=guide_colorbar(barwidth=0.5,barheight=2))

#pdf(paste0(prefix.string,'aa6.pdf'),width=2.2,height=1.2)
print(p4c)
#dev.off()
@ 

<<exp_gat_epiVsCIC,fig.width=1.3,fig.height=1.2,eval=TRUE>>=
exp_gat_gVsEpi = exp_gat_wide[!is.na(log2fc.dap.MR_mC),]
exp_gat_gVsEpi[,icsum.cg:=ifelse(is.na(icsum.cg),0,icsum.cg)]

max_l2f_dap = max(abs(exp_gat_gVsEpi[,log2fc.dap.MR_mC])+0.01)

p5a = ggplot(data=exp_gat_gVsEpi)
p5b = p5a + geom_point(aes(x=icsum.cg,y=l2fold.dmC_filtered.dapfimo4),
                       size=0.01,alpha=0.5,shape=1) 
p5c = p5b + scale_x_continuous("Motif CG content",limits=c(0,80)) +
    scale_y_continuous(expression(paste("log2 FE in eQTL"^"CH-DMB"))) +
    theme_bw() + 
    theme(axis.text.x=element_text(size=5),
          axis.text.y=element_text(size=5),
          axis.title.x=element_text(size=6),
          axis.title.y=element_text(size=6),
          strip.text.x=element_text(size=5),
          legend.title=element_text(size=6),
          legend.text=element_text(size=5))

#pdf(paste0(prefix.string,'aa6.pdf'),width=1.3,height=1.2)
print(p5c)
#dev.off()

p5d = p5c %+% geom_point(aes(x=icsum.cg,y=log2fc.dap.MR_mC),
                       size=0.01,alpha=0.5,shape=1) +
    scale_y_continuous(expression(paste("log2 binding inhibition")))
print(p5d)
@ 

<<dmC_bins_cistrome_venn,fig.width=4,fig.height=4>>=
for (mc_prefix in dmc_bins_filtered) {

    cistrome_table = fread(file.path(cistrome_olap02_path,mc_prefix,paste0(mc_prefix,'_cistrome_table.txt')),header=FALSE)
    cistrome_table = cistrome_table[,V3:=1]
    
    cistrome_names = c(mc_prefix,"cistrome","epicistrome")
    cistrome_table_wide = dcast.data.table(cistrome_table,V2~V1)
    cistrome_table_wide = NAToUnknown(cistrome_table_wide[,cistrome_names,with=FALSE],0)
    cistrome_table_wide = cistrome_table_wide[,combo:=do.call(paste0,.SD),.SDcols=cistrome_names]
    cistrome_weights = cistrome_table_wide[,.N,by="combo"]
    cistrome_wvec = cistrome_weights[,N]
    names(cistrome_wvec) = cistrome_weights[,combo]
    
    venn = Venn(Weight=cistrome_wvec,SetNames=cistrome_names)

    #pdf(paste0(prefix.string,"aa7.pdf"),width=4,height=4)
    plot(venn)
    #dev.off()
}
@ 

<<mC_all_cistrome_venn,fig.width=4,fig.height=4>>=
dmC_all_table = fread(file.path(cistrome_olap02_path,'dmC_all/dmC_all_cistrome_table.txt'),header=FALSE)
dmC_all_table = dmC_all_table[,V3:=1]

dmC_all_names = c("dmC_filtered","dmCH_filtered","cistrome","epicistrome")
dmC_all_table_wide = dcast.data.table(dmC_all_table,V2~V1)
dmC_all_table_wide = NAToUnknown(dmC_all_table_wide[,dmC_all_names,with=FALSE],0)
dmC_all_table_wide = dmC_all_table_wide[,combo:=do.call(paste0,.SD),.SDcols=dmC_all_names]
dmC_all_weights = dmC_all_table_wide[,.N,by="combo"]
dmC_all_wvec = dmC_all_weights[,N]
names(dmC_all_wvec) = dmC_all_weights[,combo]

venn = Venn(Weight=dmC_all_wvec,SetNames=dmC_all_names)
vennw = NAToUnknown(Weights(venn),0)
venn = Venn(Weight=vennw,SetNames=dmC_all_names)
plot(venn)
#pdf(paste0(prefix.string,"aa7.pdf"),width=4,height=4)

plot(venn,type="ellipses")
@ 


<<sessionInfo>>=
sessionInfo()
@

\end{document}
